{"version":3,"file":"static/js/240.c7c9bf4d.chunk.js","mappings":"mMAEA,MCAe,SAAiCA,GAC9C,IAAIC,EAAQD,EAAKC,MACjB,OAAO,SAAUC,EAAMC,GACrBC,GAAAA,CAAUF,EAAM,gCAEhB,IAAIG,EAAsBF,GAAgB,SAAUG,GAClD,OAAOL,EAAMK,EAAO,SAGtB,OAAO,SAAUA,GACf,IAAK,IAAIC,EAAOC,UAAUC,OAAQC,EAAS,IAAIC,MAAMJ,EAAO,EAAIA,EAAO,EAAI,GAAIK,EAAO,EAAGA,EAAOL,EAAMK,IACpGF,EAAOE,EAAO,GAAKJ,UAAUI,GAI/B,OADAR,GAAAA,CAAUM,EAAOD,OAAQ,uBACA,IAAlBC,EAAOD,OACdR,EAAMI,EAAoBC,GAAQJ,EAAO,WAAaQ,EAAO,IAC7DA,EAAOG,QAAO,SAAUC,EAAaC,GACnC,IAAIC,EAAQf,EAAMI,EAAoBC,GAAQJ,EAAO,WAAaa,GAClE,YAAiBE,IAAVD,EAAsBF,EAAcI,EAAAA,EAAAA,MAAYJ,EAAaC,EAAOC,KAC1E,MDpBT,CAAuCE,EAAAA,G,yDE2CvC,EAtCgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eACzB,OACE,iBACEC,UAAU,sGADZ,WAOE,iBAAKA,UAAU,UAAf,WACE,gBAAKA,UAAU,mBAAf,UACGC,EAAAA,EAAAA,IACC,kBACA,iBACAC,EAAAA,GACA,KACA,cAPN,0BAaCH,IACC,gBAAKC,UAAU,eAAf,UACGC,EAAAA,EAAAA,IACC,8BACA,4BACAE,EAAAA,GACA,CAACL,GACD,KACA,CAAEE,UAAW,wCCdnBI,EAAe,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACtB,OACE,iBAAKL,UAAU,OAAf,WACE,mBAAOM,QAASD,EAAhB,UAA8BA,EAA9B,QACA,iBAAML,UAAU,qBAAhB,UACGC,EAAAA,EAAAA,IACC,UAAYI,EACZ,YAAcA,EACdH,EAAAA,GACA,KACA,KACA,CAAEF,UAAW,mBAAoBO,GAAIF,UAO/C,EAnCiB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACZC,EAAiBC,OAAOC,KAAKH,GAAUI,KAAI,SAACC,GAChD,OACE,2BACE,SAACT,EAAD,CAAcC,YAAaQ,KADlBA,MAMf,OACE,iBAAKb,UAAU,qBAAf,uBAEE,gBAAKA,UAAU,OAAf,SAAuBS,Q,SCLzBK,EAAuB,YAUpB,IATLC,EASI,EATJA,cACAC,EAQI,EARJA,IACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,QACAC,EAKI,EALJA,UACAC,EAII,EAJJA,aACeZ,EAGX,EAHJa,YAAeb,SACfT,EAEI,EAFJA,eACAuB,EACI,EADJA,WAMA,OACE,iBAAMC,SAAUH,EAAhB,UACE,iBACEpB,UAAU,8EADZ,WAKE,iBAAKA,UAAU,OAAf,WACE,0BACE,gBACEwB,IAAKR,GAAOS,EACZC,IAAK,MACL1B,UAAU,yCAId,iBAAKA,UAAU,YAAf,WACE,gBAAKA,UAAU,WAAf,UACGC,EAAAA,EAAAA,IACC,6BACA,WACAC,EAAAA,GACA,KACA,KACA,CAAEF,UAAW,mBAIjB,gBAAKA,UAAU,OAAf,UACE,SAAC2B,EAAA,EAAD,CACEC,OAAQb,EACRE,aAAcA,EACdC,QAASA,OAIb,gBAAKlB,UAAU,OAAf,UACE,mBACEA,UAAU,gLADZ,qBAWF,iBAAKA,UAAU,OAAf,WACE,sDAEA,kBACE6B,KAAM,OACNC,SAzDI,SAACC,GACbA,EAAEC,OAAOC,MAAM7C,QAAQ+B,EAAUY,EAAEC,OAAOC,MAAM,KAyDxCjC,UAAU,2EAOlB,iBAAKA,UAAU,qBAAf,WACE,SAAC,EAAD,CACED,eAAgBA,EAChBD,OAAQwB,KAGV,SAAC,EAAD,CAAUd,SAAUA,aAO9BM,GAAuBoB,EAAAA,EAAAA,GAAU,CAC/BrD,KAAM,eADeqD,CAEpBpB,GAEH,IAAMqB,EAAWC,EAAkB,eACnCtB,GAAuBuB,EAAAA,EAAAA,KAAQ,SAACpD,GAE9B,MAAO,CACLc,eAFqBoC,EAASlD,EAAO,qBADlBoD,CAKpBvB,GAEH,IAAMwB,EAAmB,SAACC,GACxB,IAAMC,GAAW1C,EAAAA,EAAAA,GAAO,IAClBwB,GAAaxB,EAAAA,EAAAA,GAAO,KAM1B,OACE,SAACgB,GAAD,gBACES,SANa,SAACkB,GAChBF,EAAMG,kBAAkBD,KAMlBF,GAFN,IAGEC,SAAUA,EACVlB,WAAYA,EACZqB,cAAeJ,EAAMlB,gBAK3B,GAAeuB,EAAAA,EAAAA,MAAKN,I,4ECrIb,IAAMO,EAAW,SAACC,GACvB,IAAIA,EACJ,MAAO,qBAGIhD,EAAS,SAACiD,GAAD,OAAS,SAACD,GAC9B,GAAIA,GAAWA,EAAQ1D,OAAS2D,EAC9B,MAAM,qBAAN,OAA4BA","sources":["../node_modules/redux-form/es/formValueSelector.js","../node_modules/redux-form/es/createFormValueSelector.js","components/Profile/ProfileInfo/ProfileInfoInput/JobInfo/JobInfo.jsx","components/Profile/ProfileInfo/ProfileInfoInput/Contacts/Contacts.jsx","components/Profile/ProfileInfo/ProfileInfoInput/ProfileInfoInput.jsx","utils/validators/validators.js"],"sourcesContent":["import createFormValueSelector from './createFormValueSelector';\nimport plain from './structure/plain';\nexport default createFormValueSelector(plain);","import invariant from 'invariant';\nimport plain from './structure/plain';\nexport default function createFormValueSelector(_ref) {\n  var getIn = _ref.getIn;\n  return function (form, getFormState) {\n    invariant(form, 'Form value must be specified');\n\n    var nonNullGetFormState = getFormState || function (state) {\n      return getIn(state, 'form');\n    };\n\n    return function (state) {\n      for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        fields[_key - 1] = arguments[_key];\n      }\n\n      invariant(fields.length, 'No fields specified');\n      return fields.length === 1 ? // only selecting one field, so return its value\n      getIn(nonNullGetFormState(state), form + \".values.\" + fields[0]) : // selecting many fields, so return an object of field values\n      fields.reduce(function (accumulator, field) {\n        var value = getIn(nonNullGetFormState(state), form + \".values.\" + field);\n        return value === undefined ? accumulator : plain.setIn(accumulator, field, value);\n      }, {});\n    };\n  };\n}","import React from 'react';\r\nimport {\r\n  createField,\r\n  Input,\r\n  Textarea,\r\n} from '../../../../common/FormControls/FormControls';\r\n\r\nconst JobInfo = ({ maxLen, lookingForAJob }) => {\r\n  return (\r\n    <div\r\n      className=\"border rounded-lg border-gray-300\r\n                     bg-gray-200\r\n                     p-4 \r\n                     text-gray-700\r\n                     flex items-center flex-col\"\r\n    >\r\n      <div className=\"order-1\">\r\n        <div className=\"mr-1 mt-1 inline\">\r\n          {createField(\r\n            'isLookingForJob',\r\n            'lookingForAJob',\r\n            Input,\r\n            null,\r\n            'checkbox',\r\n          )}\r\n        </div>\r\n        is looking for a job\r\n      </div>\r\n\r\n      {lookingForAJob && (\r\n        <div className=\"order-2 mt-2\">\r\n          {createField(\r\n            'Please enter your skills...',\r\n            'lookingForAJobDescription',\r\n            Textarea,\r\n            [maxLen],\r\n            null,\r\n            { className: 'resize-none py-1 px-4 rounded' },\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobInfo;\r\n","import React from 'react';\r\nimport {\r\n  createField,\r\n  Input,\r\n} from '../../../../common/FormControls/FormControls';\r\n\r\nconst Contacts = ({ contacts }) => {\r\n  const parsedContacts = Object.keys(contacts).map((key) => {\r\n    return (\r\n      <span key={key}>\r\n        <ContactField contactName={key} />\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"mt-2 text-gray-700\">\r\n      Contacts:\r\n      <div className=\"ml-1\">{parsedContacts}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ContactField = ({ contactName }) => {\r\n  return (\r\n    <div className=\"mt-1\">\r\n      <label htmlFor={contactName}>{contactName}:</label>\r\n      <span className=\"ml-2 text-gray-700\">\r\n        {createField(\r\n          'insert ' + contactName,\r\n          'contacts.' + contactName,\r\n          Input,\r\n          null,\r\n          null,\r\n          { className: 'p-1 rounded w-60', id: contactName },\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { memo } from 'react';\nimport { formValueSelector, reduxForm } from 'redux-form';\nimport { maxLen } from '../../../../utils/validators/validators';\nimport placeholder from '../../../../assets/pfps/placeholder.jpg';\nimport Status from '../Status/Status';\nimport JobInfo from './JobInfo/JobInfo';\nimport Contacts from './Contacts/Contacts';\nimport { connect } from 'react-redux';\nimport {\n  createField,\n  Input,\n} from '../../../common/FormControls/FormControls';\n\nlet ProfileInfoInputForm = ({\n  profileStatus,\n  pfp,\n  updateStatus,\n  isOwner,\n  uploadPFP,\n  handleSubmit,\n  profileData: { contacts },\n  lookingForAJob,\n  maxLen1000,\n}) => {\n  const updatePFP = (e) => {\n    if (e.target.files.length) uploadPFP(e.target.files[0]);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div\n        className=\"flex justify-between\n                   bg-gray-100 rounded-lg p-8\n                   text-gray-700 font-semibold\"\n      >\n        <div className=\"flex\">\n          <div>\n            <img\n              src={pfp || placeholder}\n              alt={'pfp'}\n              className=\"rounded-full w-52 bg-gray-700 p-1\"\n            />\n          </div>\n\n          <div className=\"mt-8 ml-4\">\n            <div className=\"text-2xl\">\n              {createField(\n                'Please insert your name...',\n                'fullName',\n                Input,\n                null,\n                null,\n                { className: 'p-2 rounded' },\n              )}\n            </div>\n\n            <div className=\"mt-2\">\n              <Status\n                status={profileStatus}\n                updateStatus={updateStatus}\n                isOwner={isOwner}\n              />\n            </div>\n\n            <div className=\"mt-4\">\n              <button\n                className=\"font-semibold focus:outline-none focus:ring-0\n                            bg-gray-500 hover:bg-gray-600 active:bg-gray-700\n                            text-gray-100 text-center\n                            py-0.5 px-4 rounded\n                            transition-colors cursor-pointer\"\n              >\n                Save\n              </button>\n            </div>\n\n            <div className=\"mt-4\">\n              <div>Upload profile picture:</div>\n\n              <input\n                type={'file'}\n                onChange={updatePFP}\n                className=\"text-gray-700 font-semibold\n                          transition-colors cursor-pointer\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col w-96\">\n          <JobInfo\n            lookingForAJob={lookingForAJob}\n            maxLen={maxLen1000}\n          />\n\n          <Contacts contacts={contacts} />\n        </div>\n      </div>\n    </form>\n  );\n};\n\nProfileInfoInputForm = reduxForm({\n  form: 'profileInfo',\n})(ProfileInfoInputForm);\n\nconst selector = formValueSelector('profileInfo');\nProfileInfoInputForm = connect((state) => {\n  const lookingForAJob = selector(state, 'lookingForAJob');\n  return {\n    lookingForAJob,\n  };\n})(ProfileInfoInputForm);\n\nconst ProfileInfoInput = (props) => {\n  const maxLen50 = maxLen(50);\n  const maxLen1000 = maxLen(1000);\n\n  const onSubmit = (payload) => {\n    props.uploadProfileInfo(payload);\n  };\n\n  return (\n    <ProfileInfoInputForm\n      onSubmit={onSubmit}\n      {...props}\n      maxLen50={maxLen50}\n      maxLen1000={maxLen1000}\n      initialValues={props.profileData}\n    />\n  );\n};\n\nexport default memo(ProfileInfoInput);\n","export const required = (message) => {\n  if (message) return undefined;\n  return 'field is required';\n};\n\nexport const maxLen = (len) => (message) => {\n  if (message && message.length > len)\n    return `maximum length is ${len}`;\n  return undefined;\n};\n"],"names":["_ref","getIn","form","getFormState","invariant","nonNullGetFormState","state","_len","arguments","length","fields","Array","_key","reduce","accumulator","field","value","undefined","plain","maxLen","lookingForAJob","className","createField","Input","Textarea","ContactField","contactName","htmlFor","id","contacts","parsedContacts","Object","keys","map","key","ProfileInfoInputForm","profileStatus","pfp","updateStatus","isOwner","uploadPFP","handleSubmit","profileData","maxLen1000","onSubmit","src","placeholder","alt","Status","status","type","onChange","e","target","files","reduxForm","selector","formValueSelector","connect","ProfileInfoInput","props","maxLen50","payload","uploadProfileInfo","initialValues","memo","required","message","len"],"sourceRoot":""}