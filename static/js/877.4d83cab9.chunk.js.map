{"version":3,"file":"static/js/877.4d83cab9.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.jsx","webpack://suka/./src/components/Messages/Messages.module.css?8e7e","webpack://suka/./src/components/Messages/UserMessage/UserMessages.module.css?88b7","components/Messages/UserMessage/UserMessage.jsx","webpack://suka/./src/components/Messages/Users/Users.module.css?7c5f","components/Messages/Users/Users.jsx","webpack://suka/./src/components/Messages/SendText/SendText.module.css?cc42","components/Messages/SendText/SendText.jsx","components/Messages/Messages.jsx","redux/dialogs-selector.js","redux/user-selector.js","components/Messages/MessagesContainer.jsx","components/common/FormControls/FormControls.jsx","webpack://suka/./src/components/common/FormControls/FormControls.module.css?7a3d"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.auth.isLoggedIn,\n  };\n};\n\nlet withAuthRedirect = (Component) => {\n  const RedirectComponent= (props)=> {\n      if (!props.isLoggedIn) return <Navigate to=\"/login\" />;\n      return <Component {...props} />;\n  }\n\n  return connect(mapStateToProps, {})(RedirectComponent);\n};\n\nexport default withAuthRedirect;\n","// extracted by mini-css-extract-plugin\nexport default {\"repartition\":\"Messages_repartition__cUP+0\",\"dialogPeople\":\"Messages_dialogPeople__hrO0B\",\"dialogs\":\"Messages_dialogs__JnIFg\"};","// extracted by mini-css-extract-plugin\nexport default {\"myPfp\":\"UserMessages_myPfp__a-tPX\",\"theirPfp\":\"UserMessages_theirPfp__rqjY-\",\"fromMe\":\"UserMessages_fromMe__kq1GG\",\"fromThem\":\"UserMessages_fromThem__G8wLH\"};","import React from 'react';\nimport s from './UserMessages.module.css';\n\nconst UserMessage = ({\n  message: { from, text },\n  myPfp,\n  theirPfp,\n}) => {\n  let showMessages = () => {\n    if (from === 'me') {\n      return (\n        <div>\n          <div className={s.myPfp}>{myPfp}</div>\n          <div className={s.fromMe}>{text}</div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <div className={s.theirPfp}>{theirPfp}</div>\n          <div className={s.fromThem}>{text}</div>\n        </div>\n      );\n    }\n  };\n\n  return <div>{showMessages()}</div>;\n};\n\nexport default UserMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogUser\":\"Users_dialogUser__Oe0QH\",\"username\":\"Users_username__ozrFd\",\"active\":\"Users_active__qmkhJ\",\"pfp\":\"Users_pfp__q9oKC\",\"messagesText\":\"Users_messagesText__Dx7nG\",\"overall\":\"Users_overall__68MI3\"};","import React, { memo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Users.module.css';\n\nconst Users = ({ users }) => {\n  let userElements = users.map((e) => {\n    return (\n      <div className={s.dialogUser} key={e.id}>\n        <NavLink to={'/messages/' + e.id} className={s.pfp}>\n          {e.pfp}\n        </NavLink>\n        <NavLink\n          to={'/messages/' + e.id}\n          className={(navData) =>\n            navData.isActive ? s.active : s.username\n          }\n        >\n          {e.name[0] + ' ' + e.name[1]}\n        </NavLink>\n      </div>\n    );\n  });\n\n  return (\n    <div className={s.overall}>\n      <div className={s.messagesText}>Messages:</div>\n      <div className={s.userElements}>{userElements}</div>\n    </div>\n  );\n};\n\nexport default memo(Users);\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"SendText_button__awHXQ\",\"textArea\":\"SendText_textArea__V5Dqe\"};","import React from 'react';\nimport s from './SendText.module.css';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../../common/FormControls/FormControls';\n\nconst SendForm = ({ handleSubmit }) => {\n  return (\n    <form className={s.sendText} onSubmit={handleSubmit}>\n      <Field\n        className={s.textArea}\n        placeholder={'Enter your message'}\n        component={Textarea}\n        name={'send'}\n      />\n\n      <div>\n        <button className={s.button}>Send</button>\n      </div>\n    </form>\n  );\n};\n\nconst ReduxSendText = reduxForm({\n  form: 'login',\n})(SendForm);\n\nconst SendText = ({ send, id }) => {\n  const handleSubmit = (e) => {\n    send(id, e.send);\n    e.send = '';\n  };\n\n  return <ReduxSendText onSubmit={handleSubmit} />;\n};\n\nexport default SendText;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport s from './Messages.module.css';\nimport UserMessage from './UserMessage/UserMessage';\nimport Users from './Users/Users';\nimport SendText from './SendText/SendText';\n\nconst Messages = ({\n  state: { userMessages, users },\n  profileData,\n  memoryText,\n  send,\n}) => {\n  const userDialogElements = [];\n  for (let i = 0; i < userMessages.length; i++) {\n    userDialogElements[i] = userMessages[i].map((e) => {\n      return (\n        <div key={e.id}>\n          <UserMessage\n            message={e}\n            theirPfp={users[i].pfp}\n            myPfp={profileData.pfp}\n          />\n        </div>\n      );\n    });\n  }\n\n  const routes = userDialogElements.map((e, i) => {\n    return (\n      <Route\n        exact\n        strict\n        path={'/' + (i + 1)}\n        key={i}\n        element={\n          <div className={s.dialog}>\n            {userDialogElements[i]}\n            <SendText memoryText={memoryText} send={send} id={i} />\n          </div>\n        }\n      />\n    );\n  });\n\n  return (\n    <div className={s.repartition}>\n      <div className={s.dialogPeople}>\n        <Users users={users} />\n      </div>\n      <div className={s.dialogs}>\n        <Routes>\n          <Route\n            exact\n            strict\n            path=\"/\"\n            element={\n              <div className={s.dialog}>\n                {userDialogElements[0]}\n                <SendText\n                  memoryText={memoryText}\n                  send={send}\n                  id={0}\n                />\n              </div>\n            }\n          />\n          {routes}\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default Messages;\n","export const getStoredText = (state) => {\n  return state.dialogsPage.storedText;\n};\n\nexport const getDialogsPage = (state) => {\n  return state.dialogsPage;\n};\n","export const getProfileData = (state) => {\n  return state.userData.profileData;\n};\n","import { sendMessage } from '../../redux/dialogs-reducer';\nimport { connect } from 'react-redux';\nimport Messages from './Messages';\nimport React from 'react';\nimport withAuthRedirect from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\nimport { getDialogsPage, getStoredText } from '../../redux/dialogs-selector';\nimport { getProfileData } from '../../redux/user-selector';\n\nconst MessagesContainer = (props) => {\n  return <Messages {...props} />;\n};\n\nlet mapStateToProps = (state) => {\n  return {\n    memoryText: getStoredText(state),\n    state: getDialogsPage(state),\n    profileData: getProfileData(state),\n  };\n};\n\nexport default compose(\n  withAuthRedirect,\n  connect(mapStateToProps, {\n    send: sendMessage,\n  }),\n)(MessagesContainer);\n","import s from './FormControls.module.css';\nimport { Field } from 'redux-form';\nimport React from 'react';\n\nconst FormControl = ({ meta: { touched, error }, children }) => {\n  const hasError = touched && error;\n  return (\n    <span className={s.text + ' ' + (hasError ? s.error : '')}>\n      {children}\n      {hasError && <span>{error}</span>}\n    </span>\n  );\n};\n\nexport const Input = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const Textarea = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <textarea {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const createField = (\n  placeholder,\n  name,\n  component,\n  validators,\n  type,\n) => {\n  return (\n    <Field\n      placeholder={placeholder}\n      name={name}\n      component={component}\n      validate={validators}\n      type={type}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"FormControls_text__jhv+4\",\"error\":\"FormControls_error__f+RfD\",\"summaryError\":\"FormControls_summaryError__q4XUI\"};"],"names":["mapStateToProps","state","isLoggedIn","auth","Component","connect","props","to","message","from","text","myPfp","theirPfp","className","s","Users","userElements","users","map","e","id","pfp","navData","isActive","name","memo","ReduxSendText","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","Textarea","send","userMessages","profileData","memoryText","userDialogElements","i","length","routes","exact","strict","path","element","getStoredText","dialogsPage","storedText","getDialogsPage","getProfileData","userData","compose","withAuthRedirect","sendMessage","FormControl","meta","touched","error","children","hasError","Input","input","restProps","child","createField","validators","type","validate"],"sourceRoot":""}