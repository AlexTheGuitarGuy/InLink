{"version":3,"file":"static/js/978.653b987d.chunk.js","mappings":"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","sources":["utils/validators/validators.js","webpack://suka/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx","components/common/FormControls/FormControls.jsx","webpack://suka/./src/components/common/FormControls/FormControls.module.css?7a3d"],"sourcesContent":["export const required = (message) => {\n  if (message) return undefined;\n  return 'field is required';\n};\n\nexport const maxLen = (len) => (message) => {\n  if (message.length > len) return `maximum length is ${len}`;\n  return undefined;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"email\":\"Login_email__ItOmT\",\"password\":\"Login_password__42tbc\",\"rememberMe\":\"Login_rememberMe__PCx0s\",\"loginText\":\"Login_loginText__xOWZK\",\"loginButton\":\"Login_loginButton__N+Lg+\",\"captcha\":\"Login_captcha__PYgG6\"};","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { maxLen, required } from '../../utils/validators/validators';\nimport { createField, Input } from '../common/FormControls/FormControls';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer';\nimport s from './Login.module.css';\nimport e from '../common/FormControls/FormControls.module.css';\nimport { Navigate } from 'react-router-dom';\nimport { compose } from 'redux';\n\nconst LoginForm = ({ handleSubmit, error, maxLen, captcha }) => {\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      {error && <div className={e.summaryError}>{error}</div>}\n\n      <div className={s.email}>\n        {createField(\n          'Email',\n          'email',\n          Input,\n          [required, maxLen],\n          null,\n        )}\n      </div>\n      <div className={s.password}>\n        {createField(\n          'Password',\n          'password',\n          Input,\n          [required, maxLen],\n          'password',\n        )}\n      </div>\n      <div className={s.rememberMe}>\n        {createField(\n          'RememberMe',\n          'rememberMe',\n          Input,\n          null,\n          'checkbox',\n        )}{' '}\n        <span className={s.loginText}>remember me</span>\n      </div>\n      <div>\n        <button className={s.loginButton}> Log in </button>\n      </div>\n      {captcha ? (\n        <div className={s.captcha}>\n          <img src={captcha} alt={'captcha'} />\n          {createField(\n            'Captcha',\n            'captcha',\n            Input,\n            [required, maxLen],\n            null,\n          )}{' '}\n        </div>\n      ) : (\n        <></>\n      )}\n    </form>\n  );\n};\n\nconst ReduxLogin = reduxForm({\n  form: 'login',\n})(LoginForm);\n\nconst Login = ({ isLoggedIn, login, captcha }) => {\n  if (isLoggedIn) return <Navigate to={'/profile'} />;\n\n  const maxLen40 = maxLen(40);\n\n  const onSubmit = (payload) => {\n    login(\n      payload.email,\n      payload.password,\n      payload.rememberMe,\n      payload.captcha,\n    );\n  };\n\n  return (\n    <div className={s.body}>\n      <h1 className={s.loginText}>Login</h1>\n      <ReduxLogin\n        maxLen={maxLen40}\n        onSubmit={onSubmit}\n        captcha={captcha}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.auth.isLoggedIn,\n  captcha: state.auth.captchaURL,\n});\n\nexport default compose(\n  connect(mapStateToProps, { login }))\n(Login);\n","import s from './FormControls.module.css';\nimport { Field } from 'redux-form';\nimport React from 'react';\n\nconst FormControl = ({ meta: { touched, error }, children }) => {\n  const hasError = touched && error;\n  return (\n    <span className={s.text + ' ' + (hasError ? s.error : '')}>\n      {children}\n      {hasError && <span>{error}</span>}\n    </span>\n  );\n};\n\nexport const Input = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const Textarea = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <textarea {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const createField = (\n  placeholder,\n  name,\n  component,\n  validators,\n  type,\n) => {\n  return (\n    <Field\n      placeholder={placeholder}\n      name={name}\n      component={component}\n      validate={validators}\n      type={type}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"FormControls_text__jhv+4\",\"error\":\"FormControls_error__f+RfD\",\"summaryError\":\"FormControls_summaryError__q4XUI\"};"],"names":["required","message","ReduxLogin","reduxForm","form","handleSubmit","error","maxLen","captcha","onSubmit","className","s","e","createField","Input","src","alt","compose","connect","state","isLoggedIn","auth","captchaURL","login","to","len","maxLen40","length","payload","email","password","rememberMe","FormControl","meta","touched","children","hasError","props","input","restProps","child","Textarea","placeholder","name","component","validators","type","validate"],"sourceRoot":""}