{"version":3,"file":"static/js/588.ce52b48f.chunk.js","mappings":"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","sources":["components/Messages/UserMessage/UserMessage.jsx","components/Messages/Users/Users.jsx","components/Messages/SendText/SendText.jsx","components/Messages/Messages.jsx","redux/dialogs-selector.js","components/Messages/MessagesContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nconst UserMessage = ({ message: { from, text }, pfp }) => {\r\n  const isFromMe = from === 'me';\r\n\r\n  let showMessages = () => {\r\n    return (\r\n      <div\r\n        className={cn(\r\n          'flex font-normal mt-8',\r\n          {\r\n            'justify-end ml-8': isFromMe,\r\n          },\r\n          { 'mr-8': !isFromMe },\r\n        )}\r\n      >\r\n        <img\r\n          src={pfp}\r\n          alt=\"me\"\r\n          className={cn(\r\n            'h-10 w-10 rounded-full',\r\n            { 'order-1': !isFromMe },\r\n            { 'order-2': isFromMe },\r\n          )}\r\n        />\r\n\r\n        <div\r\n          className={cn(\r\n            'mt-2 p-2 rounded-b-lg',\r\n            {\r\n              'ml-4 order-2 bg-gray-400 text-white rounded-r-lg':\r\n                !isFromMe,\r\n            },\r\n            {\r\n              'mr-4 order-1 bg-blue-400 text-white rounded-l-lg':\r\n                isFromMe,\r\n            },\r\n          )}\r\n        >\r\n          {text}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div>{showMessages()}</div>;\r\n};\r\n\r\nexport default UserMessage;\r\n","import React, { memo } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport cn from 'classnames';\r\n\r\nconst Users = ({ users }) => {\r\n  let userElements = users.map((e) => {\r\n    return (\r\n      <div key={e.id}>\r\n        <NavLink\r\n          to={'/messages/' + e.id}\r\n          className={({ isActive }) =>\r\n            cn(\r\n              `p-2 flex items-center mt-4\r\n            transition-colors\r\n            border-b-2 border-transparent\r\n            hover:bg-gray-200 active:bg-gray-300\r\n            hover:text-gray-600 active:text-gray-700\r\n            hover:border-gray-400 active:border-gray-500\r\n            `,\r\n              {\r\n                'bg-gray-300 text-gray-700 border-gray-500': isActive,\r\n              },\r\n            )\r\n          }\r\n        >\r\n          <img\r\n            src={require(`../../../assets/pfps/u${e.id}.jpg`)}\r\n            alt={`user ${e.id}`}\r\n            className=\"h-16 w-16 rounded-full\"\r\n          />\r\n          <div className=\"ml-4\">{e.name}</div>\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"border-r border-gray-300\">\r\n      <div className=\"text-xl\">Messages:</div>\r\n      <div>{userElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Users);\r\n","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport {\r\n  createField,\r\n  Textarea,\r\n} from '../../common/FormControls/FormControls';\r\n\r\nconst SendForm = ({ handleSubmit }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"flex flex-row justify-center\">\r\n        {createField(\r\n          'Enter your message',\r\n          'send',\r\n          Textarea,\r\n          null,\r\n          null,\r\n          { className: 'resize-none w-full rounded-lg p-2' },\r\n        )}\r\n\r\n        <div>\r\n          <button\r\n            className=\" bg-gray-400 hover:bg-gray-500 active:bg-gray-600\r\n          text-gray-100 text-center\r\n          rounded-full ml-4 px-2 py-2 mt-2\r\n          transition-colors cursor-pointer\"\r\n          >\r\n            <img\r\n              src={require('../../../assets/send.png')}\r\n              alt=\"Send\"\r\n              className=\"w-8 h-8 mr-3\"\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxSendText = reduxForm({\r\n  form: 'login',\r\n})(SendForm);\r\n\r\nconst SendText = ({ send, id }) => {\r\n  const handleSubmit = (e) => {\r\n    send(id, e.send);\r\n    e.send = '';\r\n  };\r\n\r\n  return <ReduxSendText onSubmit={handleSubmit} />;\r\n};\r\n\r\nexport default SendText;\r\n","import React from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport UserMessage from './UserMessage/UserMessage';\r\nimport Users from './Users/Users';\r\nimport SendText from './SendText/SendText';\r\nimport placeholder from '../../assets/pfps/placeholder.jpg';\r\nimport { Navigate } from 'react-router';\r\n\r\nconst Messages = ({\r\n  state: { userMessages, users },\r\n  memoryText,\r\n  send,\r\n  myData,\r\n}) => {\r\n  const userDialogElements = [];\r\n  for (let i = 0; i < userMessages.length; i++) {\r\n    userDialogElements[i] = userMessages[i].map((e) => {\r\n      return (\r\n        <div key={e.id}>\r\n          <UserMessage\r\n            message={e}\r\n            pfp={\r\n              e.from === 'me'\r\n                ? myData.photos.small || placeholder\r\n                : require(`../../assets/pfps/u${users[i].id}.jpg`)\r\n            }\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  const routes = userDialogElements.map((e, i) => {\r\n    return (\r\n      <Route\r\n        path={'/' + (i + 1)}\r\n        key={i}\r\n        element={\r\n          <div className=\"flex flex-col w-full relative\">\r\n            <div className=\"mx-16 mb-32 overflow-scroll h-full\">\r\n              {userDialogElements[i]}\r\n            </div>\r\n            <div\r\n              className=\"absolute bottom-0 w-3/5 self-center\r\n              pb-4 rounded-t px-2 py-2 bg-gray-300\"\r\n            >\r\n              <SendText memoryText={memoryText} send={send} id={i} />\r\n            </div>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"flex\r\n         bg-gray-100 rounded-lg p-8\r\n         text-gray-700 font-semibold\r\n         h-full\"\r\n    >\r\n      <Users users={users} />\r\n\r\n      <Routes>\r\n        <Route path=\"/\" element={<Navigate to={'1'} />} />\r\n        {routes}\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","export const getStoredText = (state) => {\r\n  return state.dialogsPage.storedText;\r\n};\r\n\r\nexport const getDialogsPage = (state) => {\r\n  return state.dialogsPage;\r\n};\r\n\r\nexport const getMyPfp = (state) => {\r\n  return state.dialogsPage.myPfp;\r\n};\r\n","import { sendMessage } from '../../redux/dialogs-reducer';\nimport { connect } from 'react-redux';\nimport Messages from './Messages';\nimport React, { useEffect } from 'react';\nimport withAuthRedirect from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\nimport {\n  getDialogsPage,\n  getStoredText,\n} from '../../redux/dialogs-selector';\nimport { getUID } from '../../redux/auth-selector';\nimport { getProfile } from '../../redux/profile-reducer';\nimport Loading from '../common/Loading/Loading';\nimport { getProfileData } from '../../redux/profile-selector';\n\nconst MessagesContainer = ({ uid, getProfile, ...props }) => {\n  useEffect(() => {\n    getProfile(uid);\n  });\n\n  if (!props.myData) return <Loading />;\n\n  return <Messages {...props} />;\n};\n\nlet mapStateToProps = (state) => {\n  return {\n    memoryText: getStoredText(state),\n    state: getDialogsPage(state),\n    uid: getUID(state),\n    myData: getProfileData(state),\n  };\n};\n\nexport default compose(\n  withAuthRedirect,\n  connect(mapStateToProps, {\n    send: sendMessage,\n    getProfile,\n  }),\n)(MessagesContainer);\n"],"names":["message","from","text","pfp","isFromMe","className","cn","src","alt","Users","userElements","users","map","e","to","id","isActive","require","name","memo","ReduxSendText","reduxForm","form","handleSubmit","onSubmit","createField","Textarea","send","state","userMessages","memoryText","myData","userDialogElements","i","photos","small","placeholder","length","routes","path","element","getStoredText","dialogsPage","storedText","getDialogsPage","compose","withAuthRedirect","connect","uid","getUID","getProfileData","sendMessage","getProfile","props","useEffect","Loading"],"sourceRoot":""}