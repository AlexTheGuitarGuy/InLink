{"version":3,"file":"static/js/797.9616df24.chunk.js","mappings":"2MAaIA,EAAY,YAA+C,IAA5CC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9C,OACE,kBAAMC,SAAUJ,EAAcK,UAAW,QAAzC,UACGJ,IAAS,gBAAKI,UAAWC,EAAAA,EAAAA,aAAhB,SAAiCL,KAE3C,gBAAKI,UAAW,kBAAhB,UACGE,EAAAA,EAAAA,IACC,QACA,QACAC,EAAAA,GACA,CAACC,EAAAA,EAAUP,GACX,SAGJ,gBAAKG,UAAW,kBAAhB,UACGE,EAAAA,EAAAA,IACC,WACA,WACAC,EAAAA,GACA,CAACC,EAAAA,EAAUP,GACX,eAGJ,iBAAKG,UAAW,OAAhB,WACGE,EAAAA,EAAAA,IACC,aACA,aACAC,EAAAA,GACA,KACA,aAEF,iBAAMH,UAAW,OAAjB,6BAEF,0BACE,yCAEDF,GACC,iBAAKE,UAAW,kBAAhB,WACE,gBAAKK,IAAKP,EAASQ,IAAK,UAAWN,UAAW,UAC7CE,EAAAA,EAAAA,IACC,UACA,UACAC,EAAAA,GACA,CAACC,EAAAA,EAAUP,GACX,UAIJ,4BAMRH,GAAYa,EAAAA,EAAAA,GAAU,CACpBC,KAAM,SADID,CAETb,GAyBH,WAAee,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KALC,SAACC,GAAD,MAAY,CAClCC,WAAYD,EAAME,KAAKD,WACvBd,QAASa,EAAME,KAAKC,cAG0B,CAAEC,MAAAA,EAAAA,KAAlD,EAvBc,SAAC,GAAoC,IAAlCH,EAAiC,EAAjCA,WAAYG,EAAqB,EAArBA,MAAOjB,EAAc,EAAdA,QAClC,GAAIc,EAAY,OAAO,SAAC,KAAD,CAAUI,GAAI,aAErC,IAAMC,GAAWpB,EAAAA,EAAAA,GAAO,IAMxB,OACE,SAACH,EAAD,CACEG,OAAQoB,EACRlB,SAPa,SAAC,GAA8C,IAA5CmB,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,WAAYtB,EAAc,EAAdA,QAC/CiB,EAAMG,EAAOC,EAAUC,EAAYtB,IAOjCA,QAASA,Q,2NChFTuB,EAAc,SAAC,GAA4C,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAAS3B,EAAwB,EAAxBA,MAAS4B,EAAe,EAAfA,SACzCC,EAAWF,GAAW3B,EAC5B,OACE,kBAAMI,UAAW0B,EAAAA,EAAAA,KAAS,KAAOD,EAAWC,EAAAA,EAAAA,MAAU,IAAtD,UACGF,EACAC,IAAY,0BAAO7B,QAKbO,EAAQ,SAACwB,GACpB,IAAQC,EAAqCD,EAArCC,MAAuBC,GAAcF,EAA9BL,KAA8BK,EAAxBG,OAArB,OAA6CH,EAA7C,IACA,OACE,SAACN,GAAD,kBAAiBM,GAAjB,cACE,oCAAWC,GAAWC,QAKfE,EAAW,SAACJ,GACvB,IAAQC,EAAqCD,EAArCC,MAAuBC,GAAcF,EAA9BL,KAA8BK,EAAxBG,OAArB,OAA6CH,EAA7C,IACA,OACE,SAACN,GAAD,kBAAiBM,GAAjB,cACE,uCAAcC,GAAWC,QAKlB3B,EAAc,SACzB8B,EACAC,EACAC,EACAC,EACAC,GAEA,OACE,SAAC,IAAD,CACEJ,YAAaA,EACbC,KAAMA,EACNC,UAAWA,EACXG,SAAUF,EACVC,KAAMA,M,4EC7CL,IAAMhC,EAAW,SAACkC,GACvB,IAAIA,EACJ,MAAO,qBAGIzC,EAAS,SAAC0C,GAAD,OAAS,SAACD,GAC9B,GAAIA,GAAWA,EAAQE,OAASD,EAC9B,MAAM,qBAAN,OAA4BA,M,mBCNhC,KAAgB,KAAO,2BAA2B,MAAQ,4BAA4B,aAAe","sources":["components/Login/Login.jsx","components/common/FormControls/FormControls.jsx","utils/validators/validators.js","webpack://suka/./src/components/common/FormControls/FormControls.module.css?7a3d"],"sourcesContent":["import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { maxLen, required } from '../../utils/validators/validators';\nimport {\n  createField,\n  Input,\n} from '../common/FormControls/FormControls';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer';\nimport e from '../common/FormControls/FormControls.module.css';\nimport { Navigate } from 'react-router-dom';\nimport { compose } from 'redux';\n\nlet LoginForm = ({ handleSubmit, error, maxLen, captcha }) => {\n  return (\n    <form onSubmit={handleSubmit} className={'mt-10'}>\n      {error && <div className={e.summaryError}>{error}</div>}\n\n      <div className={'mb-2 text-black'}>\n        {createField(\n          'Email',\n          'email',\n          Input,\n          [required, maxLen],\n          null,\n        )}\n      </div>\n      <div className={'mb-2 text-black'}>\n        {createField(\n          'Password',\n          'password',\n          Input,\n          [required, maxLen],\n          'password',\n        )}\n      </div>\n      <div className={'mb-2'}>\n        {createField(\n          'RememberMe',\n          'rememberMe',\n          Input,\n          null,\n          'checkbox',\n        )}\n        <span className={'mb-2'}>remember me</span>\n      </div>\n      <div>\n        <button>Log in</button>\n      </div>\n      {captcha ? (\n        <div className={'mt-2 text-black'}>\n          <img src={captcha} alt={'captcha'} className={'mb-1'} />\n          {createField(\n            'Captcha',\n            'captcha',\n            Input,\n            [required, maxLen],\n            null,\n          )}\n        </div>\n      ) : (\n        <></>\n      )}\n    </form>\n  );\n};\n\nLoginForm = reduxForm({\n  form: 'login',\n})(LoginForm);\n\nconst Login = ({ isLoggedIn, login, captcha }) => {\n  if (isLoggedIn) return <Navigate to={'/profile'} />;\n\n  const maxLen40 = maxLen(40);\n\n  const onSubmit = ({ email, password, rememberMe, captcha }) => {\n    login(email, password, rememberMe, captcha);\n  };\n\n  return (\n    <LoginForm\n      maxLen={maxLen40}\n      onSubmit={onSubmit}\n      captcha={captcha}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.auth.isLoggedIn,\n  captcha: state.auth.captchaURL,\n});\n\nexport default compose(connect(mapStateToProps, { login }))(Login);\n","import s from './FormControls.module.css';\nimport { Field } from 'redux-form';\nimport React from 'react';\n\nconst FormControl = ({ meta: { touched, error }, children }) => {\n  const hasError = touched && error;\n  return (\n    <span className={s.text + ' ' + (hasError ? s.error : '')}>\n      {children}\n      {hasError && <span>{error}</span>}\n    </span>\n  );\n};\n\nexport const Input = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const Textarea = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <textarea {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const createField = (\n  placeholder,\n  name,\n  component,\n  validators,\n  type,\n) => {\n  return (\n    <Field\n      placeholder={placeholder}\n      name={name}\n      component={component}\n      validate={validators}\n      type={type}\n    />\n  );\n};\n","export const required = (message) => {\n  if (message) return undefined;\n  return 'field is required';\n};\n\nexport const maxLen = (len) => (message) => {\n  if (message && message.length > len)\n    return `maximum length is ${len}`;\n  return undefined;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"FormControls_text__jhv+4\",\"error\":\"FormControls_error__f+RfD\",\"summaryError\":\"FormControls_summaryError__q4XUI\"};"],"names":["LoginForm","handleSubmit","error","maxLen","captcha","onSubmit","className","e","createField","Input","required","src","alt","reduxForm","form","compose","connect","state","isLoggedIn","auth","captchaURL","login","to","maxLen40","email","password","rememberMe","FormControl","meta","touched","children","hasError","s","props","input","restProps","child","Textarea","placeholder","name","component","validators","type","validate","message","len","length"],"sourceRoot":""}