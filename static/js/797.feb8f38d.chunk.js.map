{"version":3,"file":"static/js/797.feb8f38d.chunk.js","mappings":"gMAYIA,EAAY,YAAwC,IAArCC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACvC,OACE,oBAASC,UAAU,oBAAnB,UACE,gBAAKA,UAAU,8BAAf,UACE,iBAAKA,UAAU,kEAAf,WACE,gBAAKA,UAAU,oCAAf,UACE,gBACEC,IAAI,mFACJD,UAAU,SACVE,IAAI,aAGR,iBAAKF,UAAU,+BAAf,WACE,gBAAKA,UAAU,2CAAf,8BAGA,kBAAMG,SAAUN,EAAcG,UAAU,UAAxC,WACE,gBAAKA,UAAU,OAAf,UACGI,EAAAA,EAAAA,IACC,gBACA,QACAC,EAAAA,GACA,CAACC,EAAAA,EAAUR,GACX,KACA,CACEE,UAAU,yZAahB,gBAAKA,UAAU,OAAf,UACGI,EAAAA,EAAAA,IACC,WACA,WACAC,EAAAA,GACA,CAACC,EAAAA,EAAUR,GACX,WACA,CACEE,UAAU,qYAYhB,gBAAKA,UAAU,yCAAf,UACE,iBAAKA,UAAU,wBAAf,WACGI,EAAAA,EAAAA,IACC,aACA,aACAC,EAAAA,GACA,KACA,WACA,CACEL,UAAU,wJAIVO,GAAG,kBAGP,kBACEP,UAAU,6DACVQ,QAAQ,eAFV,+BASJ,mBACEC,KAAK,SACLT,UAAU,kTAUV,kBAAgB,OAChB,wBAAsB,QAbxB,sBAkBA,iBAAKA,UAAU,qBAAf,wCAEE,uDAAqC,KACrC,+CAGDD,IACC,gBAAKC,UAAU,sBAAf,UACE,iBAAKA,UAAU,qBAAf,WACE,gBACEC,IAAKF,EACLG,IAAI,UACJF,UAAU,iBAEXI,EAAAA,EAAAA,IACC,UACA,UACAC,EAAAA,GACA,CAACC,EAAAA,EAAUR,GACX,KACA,CACEE,UAAU,yaAsBlCJ,GAAYc,EAAAA,EAAAA,GAAU,CACpBC,KAAM,SADID,CAETd,GAyBH,WAAegB,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KALC,SAACC,GAAD,MAAY,CAClCC,WAAYD,EAAME,KAAKD,WACvBhB,QAASe,EAAME,KAAKC,cAG0B,CAAEC,MAAAA,EAAAA,KAAlD,EAvBc,SAAC,GAAoC,IAAlCH,EAAiC,EAAjCA,WAAYG,EAAqB,EAArBA,MAAOnB,EAAc,EAAdA,QAClC,GAAIgB,EAAY,OAAO,SAAC,KAAD,CAAUI,GAAI,aAErC,IAAMC,GAAWtB,EAAAA,EAAAA,GAAO,IAMxB,OACE,SAACF,EAAD,CACEE,OAAQsB,EACRjB,SAPa,SAAC,GAA8C,IAA5CkB,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,WAAYxB,EAAc,EAAdA,QAC/CmB,EAAMG,EAAOC,EAAUC,EAAYxB,IAOjCA,QAASA,Q,4EC7KR,IAAMO,EAAW,SAACkB,GACvB,IAAIA,EACJ,MAAO,qBAGI1B,EAAS,SAAC2B,GAAD,OAAS,SAACD,GAC9B,GAAIA,GAAWA,EAAQE,OAASD,EAC9B,MAAM,qBAAN,OAA4BA","sources":["components/Login/Login.jsx","utils/validators/validators.js"],"sourcesContent":["import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLen, required } from '../../utils/validators/validators';\r\nimport {\r\n  createField,\r\n  Input,\r\n} from '../common/FormControls/FormControls';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nlet LoginForm = ({ handleSubmit, maxLen, captcha }) => {\r\n  return (\r\n    <section className=\"h-screen relative\">\r\n      <div className=\"container px-6 py-12 h-full\">\r\n        <div className=\"flex justify-center items-center flex-wrap h-full text-gray-700\">\r\n          <div className=\"md:w-8/12 lg:w-6/12 mb-12 md:mb-0\">\r\n            <img\r\n              src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.svg\"\r\n              className=\"w-full\"\r\n              alt=\"Phone\"\r\n            />\r\n          </div>\r\n          <div className=\"md:w-8/12 lg:w-5/12 lg:ml-20\">\r\n            <div className=\"text-gray-700 font-bold text-center mb-6\">\r\n              Log into InLink\r\n            </div>\r\n            <form onSubmit={handleSubmit} className=\"text-xl\">\r\n              <div className=\"mb-6\">\r\n                {createField(\r\n                  'Email address',\r\n                  'email',\r\n                  Input,\r\n                  [required, maxLen],\r\n                  null,\r\n                  {\r\n                    className: `form-control block w-full\r\n                    px-4 py-2 m-0\r\n                    font-normal text-gray-700\r\n                    bg-white bg-clip-padding\r\n                    border border-solid border-gray-300 rounded\r\n                    transition ease-in-out\r\n                    focus:text-gray-800\r\n                    focus:bg-white focus:border-gray-600\r\n                    focus:outline-none`,\r\n                  },\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"mb-6\">\r\n                {createField(\r\n                  'Password',\r\n                  'password',\r\n                  Input,\r\n                  [required, maxLen],\r\n                  'password',\r\n                  {\r\n                    className: `form-control block w-full\r\n                    px-4 py-2  m-0\r\n                    font-normal text-gray-700\r\n                    bg-white bg-clip-padding\r\n                    border border-solid border-gray-300 rounded\r\n                    transition ease-in-out\r\n                    focus:text-gray-800 focus:bg-white focus:border-gray-600\r\n                    focus:outline-none`,\r\n                  },\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"flex justify-between items-center mb-6\">\r\n                <div className=\"form-group form-check\">\r\n                  {createField(\r\n                    'RememberMe',\r\n                    'rememberMe',\r\n                    Input,\r\n                    null,\r\n                    'checkbox',\r\n                    {\r\n                      className: `h-4 w-4 mr-2\r\n                      border border-gray-300\r\n                      rounded-sm\r\n                      focus:outline-none cursor-pointer`,\r\n                      id: `exampleCheck`,\r\n                    },\r\n                  )}\r\n                  <label\r\n                    className=\"form-check-label inline-block text-gray-800 cursor-pointer\"\r\n                    htmlFor=\"exampleCheck\"\r\n                  >\r\n                    Remember me\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"inline-block\r\n                px-7 py-3\r\n                bg-gray-600\r\n                text-white font-medium text-sm leading-snug uppercase\r\n                rounded shadow-md\r\n                hover:bg-gray-700 hover:shadow-lg\r\n                focus:bg-gray-700 focus:shadow-lg\r\n                focus:outline-none focus:ring-0\r\n                active:bg-gray-800 active:shadow-lg\r\n                transition duration-150 ease-in-out w-full\"\r\n                data-mdb-ripple=\"true\"\r\n                data-mdb-ripple-color=\"light\"\r\n              >\r\n                Sign in\r\n              </button>\r\n\r\n              <div className=\"text-gray-700 mt-6\">\r\n                Free account for visitors:\r\n                <div>Email: free@samuraijs.com</div>{' '}\r\n                <div>Password: free</div>\r\n              </div>\r\n\r\n              {captcha && (\r\n                <div className=\"flex justify-center\">\r\n                  <div className=\"mt-6 text-gray-700\">\r\n                    <img\r\n                      src={captcha}\r\n                      alt=\"captcha\"\r\n                      className=\"mb-4 w-full\"\r\n                    />\r\n                    {createField(\r\n                      'Captcha',\r\n                      'captcha',\r\n                      Input,\r\n                      [required, maxLen],\r\n                      null,\r\n                      {\r\n                        className: `form-control block w-full\r\n                    px-4 py-2 m-0\r\n                    font-normal text-gray-700\r\n                    bg-white bg-clip-padding\r\n                    border border-solid border-gray-300 rounded\r\n                    transition ease-in-out\r\n                    focus:text-gray-800\r\n                    focus:bg-white focus:border-gray-600\r\n                    focus:outline-none`,\r\n                      },\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLoginForm = reduxForm({\r\n  form: 'login',\r\n})(LoginForm);\r\n\r\nconst Login = ({ isLoggedIn, login, captcha }) => {\r\n  if (isLoggedIn) return <Navigate to={'/profile'} />;\r\n\r\n  const maxLen40 = maxLen(40);\r\n\r\n  const onSubmit = ({ email, password, rememberMe, captcha }) => {\r\n    login(email, password, rememberMe, captcha);\r\n  };\r\n\r\n  return (\r\n    <LoginForm\r\n      maxLen={maxLen40}\r\n      onSubmit={onSubmit}\r\n      captcha={captcha}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.auth.isLoggedIn,\r\n  captcha: state.auth.captchaURL,\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, { login }))(Login);\r\n","export const required = (message) => {\n  if (message) return undefined;\n  return 'field is required';\n};\n\nexport const maxLen = (len) => (message) => {\n  if (message && message.length > len)\n    return `maximum length is ${len}`;\n  return undefined;\n};\n"],"names":["LoginForm","handleSubmit","maxLen","captcha","className","src","alt","onSubmit","createField","Input","required","id","htmlFor","type","reduxForm","form","compose","connect","state","isLoggedIn","auth","captchaURL","login","to","maxLen40","email","password","rememberMe","message","len","length"],"sourceRoot":""}