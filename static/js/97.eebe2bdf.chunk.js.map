{"version":3,"file":"static/js/97.eebe2bdf.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.jsx","webpack://suka/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://suka/./src/components/Profile/MyPosts/Publish/Publish.module.css?f52c","components/Profile/MyPosts/Publish/Publish.jsx","webpack://suka/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfoText/JobInfo/JobInfo.jsx","components/Profile/ProfileInfo/ProfileInfoText/Contacts/Contacts.jsx","components/Profile/ProfileInfo/ProfileInfoText/UserName/UserName.jsx","components/Profile/ProfileInfo/ProfileInfoText/EditButton/EditButton.jsx","components/Profile/ProfileInfo/ProfileInfoText/ProfileInfoText.jsx","components/Profile/Profile.jsx","redux/profile-selector.js","components/Profile/ProfileContainer.jsx","webpack://suka/./src/components/Profile/ProfileInfo/Status/Status.module.css?fbef","components/Profile/ProfileInfo/Status/Status.jsx","components/common/FormControls/FormControls.jsx","../node_modules/classnames/index.js","webpack://suka/./src/components/Profile/ProfileInfo/ProfileInfoText/ProfileInfoText.module.css?7d3c","webpack://suka/./src/components/common/FormControls/FormControls.module.css?7a3d"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    isLoggedIn: state.auth.isLoggedIn,\n  };\n};\n\nlet withAuthRedirect = (Component) => {\n  const RedirectComponent= (props)=> {\n      if (!props.isLoggedIn) return <Navigate to=\"/login\" />;\n      return <Component {...props} />;\n  }\n\n  return connect(mapStateToProps, {})(RedirectComponent);\n};\n\nexport default withAuthRedirect;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__HoVfV\",\"text\":\"Post_text__AUNyA\",\"likeCount\":\"Post_likeCount__9RGh6\",\"likeSymbol\":\"Post_likeSymbol__piS0G\"};","import React from 'react';\nimport s from './Post.module.css';\nimport pfp from '../../../../assets/pfps/myPfp.jpg';\n\nconst Post = ({ text, likeCount }) => {\n  return (\n    <div className={s.item}>\n      <img src={pfp} alt=\"poster_pfp\" />\n\n      <div className={s.text}>{text}</div>\n      <div>\n        <div className={s.likeSymbol}>‚ù§</div>\n        <div className={s.likeCount}>{likeCount}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport default {\"all\":\"Publish_all__bN-N9\",\"button\":\"Publish_button__Lbj3v\",\"newPost\":\"Publish_newPost__ajJvD\",\"textarea\":\"Publish_textarea__6qLEb\"};","import React from 'react';\nimport s from './Publish.module.css';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../../../common/FormControls/FormControls';\n\nconst PublishForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field\n        className={s.textarea}\n        placeholder={'Type what you think...'}\n        component={Textarea}\n        name={'post'}\n      />\n      <div>\n        <button className={s.button}>Publish</button>\n      </div>\n    </form>\n  );\n};\n\nconst ReduxPublish = reduxForm({\n  form: 'login',\n})(PublishForm);\n\nconst Publish = ({ post, ...props }) => {\n  const handleSubmit = (e) => {\n    post(e.post);\n    e.post = '';\n  };\n\n  return (\n    <div className={s.all}>\n      <div className={s.newPost}>New post</div>\n      <ReduxPublish {...props} onSubmit={handleSubmit} />\n    </div>\n  );\n};\n\nexport default Publish;\n","// extracted by mini-css-extract-plugin\nexport default {\"all\":\"MyPosts_all__4zChY\"};","import React from 'react';\nimport Post from './Post/Post.jsx';\nimport Publish from './Publish/Publish.jsx';\nimport s from './MyPosts.module.css';\n\nconst MyPosts = ({ posts, ...props }) => {\n  const postElements = posts.map((e) => (\n    <Post key={e.id} text={e.text} likeCount={e.likes} />\n  ));\n\n  return (\n    <div className={s.all}>\n      <Publish {...props} />\n      {postElements.reverse()}\n    </div>\n  );\n};\n\nexport default MyPosts;\n","import React from 'react';\n\nconst JobInfo = ({ lookingForAJob, lookingForAJobDescription }) => {\n  return (\n    <span>\n      {lookingForAJob && (\n        <div\n          className={`border-2 border-slate-800 \n                         rounded bg-slate-600 \n                         p-2 mt-2 text-white`}\n        >\n          <span className={'content flex justify-center mb-2 mr-5'}>\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/55/Magnifying_glass_icon.svg/1200px-Magnifying_glass_icon.svg.png\"\n              alt=\"looking for job\"\n              className={'w-5 h-5 mt-0.5 mr-1'}\n            />\n            is looking for a job\n          </span>\n\n          <div className={'text-center'}>\n            {lookingForAJobDescription\n              ? '\"' + lookingForAJobDescription + '\"'\n              : null}\n          </div>\n        </div>\n      )}\n    </span>\n  );\n};\n\nexport default JobInfo;\n","import React from 'react';\n\nconst Contacts = ({ contacts }) => {\n  let isEmpty = true;\n  let i;\n  for (i in contacts)\n    if (contacts.hasOwnProperty(i)) {\n      if (contacts[i]) {\n        isEmpty = false;\n        break;\n      }\n    }\n\n  const parsedContacts = Object.keys(contacts).map((key) => {\n    return (\n      <span key={key}>\n        {contacts[key] && (\n          <TextContact\n            contactName={key}\n            contactAddress={contacts[key]}\n          />\n        )}\n      </span>\n    );\n  });\n\n  return (\n    <span className={'mt-1 text-white'}>\n      Contacts:\n      <div className={'ml-1'}>\n        {isEmpty ? 'None' : parsedContacts}\n      </div>\n    </span>\n  );\n};\n\nconst TextContact = ({ contactName, contactAddress }) => {\n  return (\n    <div>\n      {contactName}: {contactAddress}\n    </div>\n  );\n};\n\nexport default Contacts;\n","import React from 'react';\n\nconst UserName = ({ fullName }) => {\n  return <div>{fullName}</div>;\n};\n\nexport default UserName;\n","import React from 'react';\n\nconst EditButton = ({ isOwner, setEditing }) => {\n  return (\n    <span className={'grid'}>\n      {isOwner ? (\n        <button onClick={() => setEditing(true)}>Edit mode</button>\n      ) : null}\n    </span>\n  );\n};\n\nexport default EditButton;\n","import banner from '../../../../assets/banner.jfif';\nimport s from './ProfileInfoText.module.css';\nimport placeholder from '../../../../assets/pfps/placeholder.jpg';\nimport JobInfo from './JobInfo/JobInfo';\nimport Contacts from './Contacts/Contacts';\nimport Status from '../Status/Status';\nimport React, { memo } from 'react';\nimport UserName from './UserName/UserName';\nimport EditButton from './EditButton/EditButton';\n\nconst ProfileInfoText = ({\n  profileData: {\n    lookingForAJob,\n    lookingForAJobDescription,\n    fullName,\n    contacts,\n  },\n  profileStatus,\n  pfp,\n  updateStatus,\n  isOwner,\n  setEditing,\n}) => {\n  return (\n    <div>\n      <img src={banner} alt=\"banner\" className={s.banner} />\n\n      <div className={s.pfpAndDetails}>\n        <div className={s.pfp}>\n          <img src={pfp || placeholder} alt={'pfp'} />\n        </div>\n\n        <span className={s.jobInfo}>\n          <EditButton isOwner={isOwner} setEditing={setEditing} />\n\n          <JobInfo\n            lookingForAJob={lookingForAJob}\n            lookingForAJobDescription={lookingForAJobDescription}\n          />\n        </span>\n\n        <div className={s.details}>\n          <span className={s.username}>\n            <UserName fullName={fullName} />\n          </span>\n\n          <span className={s.status}>\n            <Status\n              status={profileStatus}\n              updateStatus={updateStatus}\n              isOwner={isOwner}\n            />\n          </span>\n\n          <span className={s.contacts}>\n            <Contacts contacts={contacts} />\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ProfileInfoText);\n","import React, { lazy, useState } from 'react';\nimport Loading from '../common/Loading/Loading';\nimport MyPosts from './MyPosts/MyPosts';\nimport ProfileInfoText from './ProfileInfo/ProfileInfoText/ProfileInfoText';\n\nconst ProfileInfoInput = lazy(() =>\n  import('./ProfileInfo/ProfileInfoInput/ProfileInfoInput').then(\n    ({ default: ProfileInfoInput }) => ({\n      default: ProfileInfoInput,\n    }),\n  ),\n);\n\nconst Profile = ({\n  isLoading,\n  state: { profileData, profileStatus },\n  updateStatus,\n  isOwner,\n  uploadPFP,\n  posts,\n  post,\n  uploadProfileInfo,\n}) => {\n  const [isEditing, setEditing] = useState(false);\n\n  if (isLoading || !profileData) return <Loading />;\n\n  return (\n    <div>\n      {isEditing ? (\n        <ProfileInfoInput\n          uploadPFP={uploadPFP}\n          isOwner={isOwner}\n          pfp={profileData.photos.large}\n          profileData={profileData}\n          profileStatus={profileStatus}\n          updateStatus={updateStatus}\n          uploadProfileInfo={uploadProfileInfo}\n          isEditing={isEditing}\n          setEditing={setEditing}\n        />\n      ) : (\n        <ProfileInfoText\n          uploadPFP={uploadPFP}\n          isOwner={isOwner}\n          pfp={profileData.photos.large}\n          profileData={profileData}\n          profileStatus={profileStatus}\n          updateStatus={updateStatus}\n          uploadProfileInfo={uploadProfileInfo}\n          isEditing={isEditing}\n          setEditing={setEditing}\n        />\n      )}\n      <MyPosts posts={posts} post={post} />\n    </div>\n  );\n};\n\nexport default Profile;\n","export const getProfilePage = (state) => {\n  return state.profilePage;\n};\n\nexport const getIsLoading = (state) => {\n  return state.profilePage.isLoading;\n};\n\nexport const getStoredText = (state) => {\n  return state.profilePage.storedText;\n};\n\nexport const getPosts = (state) => {\n  return state.profilePage.posts;\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport {\n  getProfile,\n  getStatus,\n  post,\n  updateStatus,\n  uploadPFP,\n  uploadProfileInfo,\n} from '../../redux/profile-reducer';\nimport withAuthRedirect from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\nimport {\n  getIsLoading,\n  getPosts,\n  getProfilePage,\n  getStoredText,\n} from '../../redux/profile-selector';\nimport { getUID } from '../../redux/auth-selector';\nimport withRouter from '../../HOC/withRouter';\n\nconst ProfileContainer = ({\n  uid,\n  router,\n  getProfile,\n  getStatus,\n  ...props\n}) => {\n  let loggedUser = uid;\n  let currentUserPage = router.params.uid;\n\n  useEffect(() => {\n    let user = currentUserPage || loggedUser;\n\n    getProfile(user);\n    getStatus(user);\n  }, [getProfile, getStatus, loggedUser, currentUserPage]);\n\n  return <Profile isOwner={!currentUserPage} {...props} />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    state: getProfilePage(state),\n    isLoading: getIsLoading(state),\n    uid: getUID(state),\n    memoryText: getStoredText(state),\n    posts: getPosts(state),\n  };\n};\n\nexport default compose(\n  withAuthRedirect,\n  withRouter,\n  connect(mapStateToProps, {\n    getProfile,\n    getStatus,\n    updateStatus,\n    uploadPFP,\n    post,\n    uploadProfileInfo,\n  }),\n)(ProfileContainer);\n","// extracted by mini-css-extract-plugin\nexport default {\"all\":\"Status_all__HtTGI\",\"descriptionText\":\"Status_descriptionText__+NTJR\",\"descriptionEdit\":\"Status_descriptionEdit__5Cach\",\"isOwner\":\"Status_isOwner__rbjfA\"};","import s from './Status.module.css';\nimport React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nconst Status = ({ isOwner, updateStatus, status }) => {\n  const [isEditing, setEditing] = useState(false);\n  const [localStatus, setStatus] = useState(status);\n\n  const activateEdit = () => {\n    if (isOwner) setEditing(true);\n  };\n  const deactivateEdit = () => {\n    setEditing(false);\n    updateStatus(localStatus);\n  };\n\n  const editLocalStatus = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    setStatus(status);\n  }, [status]);\n\n  return (\n    <div className={s.all}>\n      {!isEditing ? (\n        <span\n          className={cn(s.descriptionText, { [s.isOwner]: isOwner })}\n          onClick={activateEdit}\n        >\n          {status ? '\"' + status + '\"' : 'No status'}\n        </span>\n      ) : (\n        <input\n          onChange={editLocalStatus}\n          className={s.descriptionEdit}\n          autoFocus={true}\n          onBlur={deactivateEdit}\n          defaultValue={localStatus}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Status;\n","import s from './FormControls.module.css';\nimport { Field } from 'redux-form';\nimport React from 'react';\n\nconst FormControl = ({ meta: { touched, error }, children }) => {\n  const hasError = touched && error;\n  return (\n    <span className={s.text + ' ' + (hasError ? s.error : '')}>\n      {children}\n      {hasError && <span>{error}</span>}\n    </span>\n  );\n};\n\nexport const Input = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const Textarea = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <textarea {...input} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const createField = (\n  placeholder,\n  name,\n  component,\n  validators,\n  type,\n) => {\n  return (\n    <Field\n      placeholder={placeholder}\n      name={name}\n      component={component}\n      validate={validators}\n      type={type}\n    />\n  );\n};\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nexport default {\"banner\":\"ProfileInfoText_banner__Ji6dB\",\"pfpAndDetails\":\"ProfileInfoText_pfpAndDetails__aymKc\",\"jobInfo\":\"ProfileInfoText_jobInfo__Hnncb\",\"pfp\":\"ProfileInfoText_pfp__xaEeR\",\"details\":\"ProfileInfoText_details__CrA5n\",\"username\":\"ProfileInfoText_username__1-b19\",\"status\":\"ProfileInfoText_status__DGUyq\",\"contacts\":\"ProfileInfoText_contacts__ZbMuI\"};","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"FormControls_text__jhv+4\",\"error\":\"FormControls_error__f+RfD\",\"summaryError\":\"FormControls_summaryError__q4XUI\"};"],"names":["mapStateToProps","state","isLoggedIn","auth","Component","connect","props","to","text","likeCount","className","s","src","pfp","alt","ReduxPublish","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","Textarea","name","post","e","posts","postElements","map","likes","id","reverse","lookingForAJob","lookingForAJobDescription","TextContact","contactName","contactAddress","i","contacts","isEmpty","hasOwnProperty","parsedContacts","Object","keys","key","fullName","isOwner","setEditing","onClick","ProfileInfoText","profileData","profileStatus","updateStatus","banner","Status","status","memo","ProfileInfoInput","lazy","then","default","isLoading","uploadPFP","uploadProfileInfo","useState","isEditing","Loading","photos","large","getProfilePage","profilePage","getIsLoading","getStoredText","storedText","getPosts","compose","withAuthRedirect","withRouter","uid","getUID","memoryText","getProfile","getStatus","router","loggedUser","currentUserPage","params","useEffect","user","localStatus","setStatus","onChange","currentTarget","value","autoFocus","onBlur","defaultValue","cn","FormControl","meta","touched","error","children","hasError","Input","input","restProps","child","createField","validators","type","validate","hasOwn","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","prototype","call","join","module","exports"],"sourceRoot":""}